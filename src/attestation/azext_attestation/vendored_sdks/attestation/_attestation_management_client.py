# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6198, generator: {generator})
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Optional

from azure.core import PipelineClient
from msrest import Deserializer, Serializer

from ._configuration import AttestationManagementClientConfiguration
from .operations import Operations
from .operations import AttestationProvidersOperations
from . import models


class AttestationManagementClient(object):
    """Various APIs for managing resources in attestation service. This primarily encompasses per-tenant instance management.

    :ivar operations: Operations operations
    :vartype operations: attestation_management_client.operations.Operations
    :ivar attestation_providers: AttestationProvidersOperations operations
    :vartype attestation_providers: attestation_management_client.operations.AttestationProvidersOperations
    :param subscription_id: The ID of the target subscription.
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
        self,
        subscription_id,  # type: str
        base_url=None  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        if not base_url:
            base_url = 'https://management.azure.com'
        print(base_url)
        self._config = AttestationManagementClientConfiguration(subscription_id, **kwargs)
        self._client = PipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.operations = Operations(
            self._client, self._config, self._serialize, self._deserialize)
        self.attestation_providers = AttestationProvidersOperations(
            self._client, self._config, self._serialize, self._deserialize)

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> AttestationManagementClient
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
