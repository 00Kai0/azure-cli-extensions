# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Optional

from azure.mgmt.core import AsyncARMPipelineClient
from msrest import Deserializer, Serializer

from ._configuration_async import OperationsManagementClientConfiguration
from .operations_async import SolutionOperations
from .operations_async import ManagementAssociationOperations
from .operations_async import ManagementConfigurationOperations
from .operations_async import OperationOperations
from .. import models


class OperationsManagementClient(object):
    """Operations Management Client.

    :ivar solution: SolutionOperations operations
    :vartype solution: azure.mgmt.operationsmanagement.aio.operations_async.SolutionOperations
    :ivar management_association: ManagementAssociationOperations operations
    :vartype management_association: azure.mgmt.operationsmanagement.aio.operations_async.ManagementAssociationOperations
    :ivar management_configuration: ManagementConfigurationOperations operations
    :vartype management_configuration: azure.mgmt.operationsmanagement.aio.operations_async.ManagementConfigurationOperations
    :ivar operation: OperationOperations operations
    :vartype operation: azure.mgmt.operationsmanagement.aio.operations_async.OperationOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: azure.core.credentials.TokenCredential
    :param subscription_id: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
    :type subscription_id: str
    :param provider_name: Provider name for the parent resource.
    :type provider_name: str
    :param resource_type: Resource type for the parent resource.
    :type resource_type: str
    :param resource_name: Parent resource name.
    :type resource_name: str
    :param str base_url: Service URL
    """

    def __init__(
        self,
        credential: "TokenCredential",
        subscription_id: str,
        provider_name: str,
        resource_type: str,
        resource_name: str,
        base_url: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        if not base_url:
            base_url = 'https://management.azure.com'
        self._config = OperationsManagementClientConfiguration(credential, subscription_id, provider_name, resource_type, resource_name, **kwargs)
        self._client = AsyncARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.solution = SolutionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.management_association = ManagementAssociationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.management_configuration = ManagementConfigurationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.operation = OperationOperations(
            self._client, self._config, self._serialize, self._deserialize)

    async def close(self) -> None:
        await self._client.close()

    async def __aenter__(self) -> "OperationsManagementClient":
        await self._client.__aenter__()
        return self

    async def __aexit__(self, *exc_details) -> None:
        await self._client.__aexit__(*exc_details)
